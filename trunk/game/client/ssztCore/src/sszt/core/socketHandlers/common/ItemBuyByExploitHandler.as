package sszt.core.socketHandlers.common
{
	import sszt.core.data.GlobalAPI;
	import sszt.core.data.GlobalData;
	import sszt.core.data.ProtocolType;
	import sszt.core.manager.LanguageManager;
	import sszt.core.socketHandlers.BaseSocketHandler;
	import sszt.core.view.quickTips.QuickTips;
	import sszt.events.CommonModuleEvent;
	import sszt.interfaces.socket.IPackageOut;
	import sszt.module.ModuleEventDispatcher;
	import sszt.ui.container.MAlert;
	
	/**
	 * 功勋购买物品 
	 * @author chendong
	 * 
	 */	
	public class ItemBuyByExploitHandler extends BaseSocketHandler
	{
		public function ItemBuyByExploitHandler(handlerData:Object=null)
		{
			super(handlerData);
		}
		
		override public function getCode():int
		{
			// TODO Auto Generated method stub
			return ProtocolType.ITEM_EXPLOIT_BUY;
		}
		
		override public function handlePackage():void
		{
			// TODO Auto Generated method stub
			var usedExploit:int = 0; //花费功勋
			var currentExploit:int = 0; //当前功勋
			if(!_data.readBoolean())
			{
				MAlert.show(LanguageManager.getWord("ssztl.common.buyFail"),LanguageManager.getWord("ssztl.common.alertTitle"));
			}else
			{
				usedExploit = _data.readInt();
				currentExploit = _data.readInt();
				GlobalData.pvpInfo.exploit = currentExploit;
				ModuleEventDispatcher.dispatchCommonModuleEvent(new CommonModuleEvent(CommonModuleEvent.UPDATE_EXPLOIT));
				QuickTips.show(LanguageManager.getWord("ssztl.common.buySuccess"));
			}
			
			handComplete();
		}
		
		public static function sendBuy(shopItemId:int,count:int):void
		{
			var pkg:IPackageOut = GlobalAPI.socketManager.getPackageOut(ProtocolType.ITEM_EXPLOIT_BUY);
			pkg.writeInt(shopItemId);
			pkg.writeInt(count);
			GlobalAPI.socketManager.send(pkg);
		}
	}
}